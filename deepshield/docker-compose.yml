version: '3.8'

services:
  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: deepshield-backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=sqlite:///./deepshield.db
      - HOST=0.0.0.0
      - PORT=8000
      - ALLOWED_ORIGINS=http://localhost:3000,http://frontend:80
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/deepshield.db:/app/deepshield.db
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Service
  frontend:
    image: nginx:alpine
    container_name: deepshield-frontend
    ports:
      - "3000:80"
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
    restart: unless-stopped

  # Database Service (for production)
  # Uncomment and configure for production use
  # database:
  #   image: postgres:15-alpine
  #   container_name: deepshield-db
  #   environment:
  #     POSTGRES_DB: deepshield
  #     POSTGRES_USER: deepshield
  #     POSTGRES_PASSWORD: your-secure-password
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U deepshield"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

  # Redis Service (for caching and sessions)
  # Uncomment for production use
  # redis:
  #   image: redis:7-alpine
  #   container_name: deepshield-redis
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "ping"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

# Volumes for persistent data
volumes:
  postgres_data:
    driver: local

# Networks
networks:
  default:
    name: deepshield-network

